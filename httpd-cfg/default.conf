<IfModule mod_ssl.c> 

	<VirtualHost *:8443>
	        ServerAdmin webmaster@localhost
	        ServerName robotics.ext-rt.doosan.com
	 
	        SSLEngine On
	        #ReverseProxy를 사용하기 위함.
	        ProxyRequests On
	        ProxyPreserveHost On
	        RewriteEngine On
	        SSLProxyEngine On
	        SSLProxyVerify None
            # pass request body failed 
            SSLProxyCheckPeerCN off
            SSLProxyCheckPeerName off

	        LogLevel alert rewrite:trace6
	        LogLevel Warn
	        ErrorLog /volumes/8443_error.log
	        CustomLog /volumes/8443_access.log combined
	        CustomLog /volumes/8443_access_inform.log "Host : %h\nTime : %t\nRequest : %r\nStatus : %>s\nReferer : %{Referer}i\nUser-Agent : \"%{User-Agent}i\nSSLProtocol : %{SSL_PROTOCOL}x\nSSLclientName: %{SSL_CLIENT_S_DN_CN}x \nSSLclientOU: %{SSL_CLIENT_S_DN_OU}x \n"

	        #Site Certificate issued by COMODO
	        #SSLCertificateFile /opt/app-root/src/certs/star_doosanrobotics_com_cert.pem
	        #SSLCertificateKeyFile /opt/app-root/src/certs/star_doosanrobotics_com_key.pem
            #SSLCertificateChainFile /opt/app-root/src/certs/Chain_RootCA_Bundle.crt
            
            SSLCertificateFile /opt/app-root/src/certs/robotics.int-rt.corp.doosan.com.cert.pem
            SSLCertificateKeyFile /opt/app-root/src/certs/robotics.int-rt.corp.doosan.com.key.pem
            
	        #루트CA의 인증서 경로
	        SSLCACertificatePath /volumes/DoosanRobotics-Root-CA/
	        SSLCACertificateFile /volumes/DoosanRobotics-Root-CA/root-ca.cert.pem

	        #CRL경로
	        #SSLCARevocationPath /volumes/DoosanRobotics-Root-CA
	        SSLCARevocationPath /volumes/DoosanRobotics-Root-CA/crl/
	        SSLCARevocationFile /volumes/DoosanRobotics-Root-CA/crl/root-ca.crl
	  
	        #사용자 인증서 점검
	        SSLVerifyClient require
	        SSLVerifyDepth 1

	  
	        #인증서 폐기 목록 검증하는 부분
	        SSLCARevocationCheck leaf
	 
	        #jboss 인증서 웹페이지 연결
	        #ProxyPass / https://dra-ca.ext-rt.doosan.com
	        #ProxyPassReverse / https://dra-ca.ext-rt.doosan.com
	        
	        #Client certificate data header
	        RequestHeader set SSL_CLIENT_S_DN    ""
	        RequestHeader set SSL_CLIENT_I_DN    ""
	        RequestHeader set SSL_SERVER_S_DN_OU ""
	        RequestHeader set SSL_CLIENT_VERIFY  ""
	        RequestHeader set SSL_CLIENT_S_DN_CN ""

	        #인증서 DN의 OU 기반 redirect
	        RewriteCond %{SSL:SSL_CLIENT_S_DN_OU} ^Admin [NC]
	        RewriteCond %{REQUEST_URI} ^/$
	        RewriteRule ^(.*)$ https://robotics.ext-rt.doosan.com/Admin/ [L]

	        #인증서 DN의 OU 기반 redirect
	        RewriteCond %{SSL:SSL_CLIENT_S_DN_OU} ^Service [NC]
	        RewriteCond %{REQUEST_URI} ^/$
	        RewriteRule ^(.*)$ https://robotics.ext-rt.doosan.com/Service/ [L]
	        
 
 
	         <Location /Admin/>
	                Require all granted
	                SSLOptions +StdEnvVars +ExportCertData
	                SSLVerifyClient require
	                SSLRequire  %{SSL_CLIENT_S_DN_OU} in {"Admin", "IT Admin"}
	                RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
	                RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"
	                RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"
	                RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
	                RequestHeader set SSL_CLIENT_S_DN_CN "%{SSL_CLIENT_S_DN_CN}s"
	                ProxyPass https://172.30.81.32:8443/Admin/
	                ProxyPassReverse  https://172.30.81.32:8443/Admin/
	        </Location>
	        <Location /Service/>
	                Require all granted
	                SSLOptions +StdEnvVars +ExportCertData
	                SSLVerifyClient require
	                SSLRequire %{SSL_CLIENT_S_DN_OU} in {"Service", "QA"}
	                RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
	                RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"
	                RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"
	                RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
	                RequestHeader set SSL_CLIENT_S_DN_CN "%{SSL_CLIENT_S_DN_CN}s"
	                ProxyPass https://172.30.81.32:8443/Service/
	                ProxyPassReverse  https://172.30.81.32:8443/Service/
	        </Location>
	 
	        #인증서 검증에 실패하였을 경우, 프록시 접근 Deny
	        <Proxy *>
	            Require all granted
	        </Proxy>
	 
	        SSLOptions +StdEnvVars
	        <FilesMatch "\.(cgi|shtml|phtml|php)$">
	                SSLOptions +StdEnvVars
	        </FilesMatch>
	        <Directory /usr/lib/cgi-bin>
	                SSLOptions +StdEnvVars
	        </Directory>
	         BrowserMatch "MSIE [2-6]" \
	                nokeepalive ssl-unclean-shutdown \
	                downgrade-1.0 force-response-1.0
	</VirtualHost>
 

</IfModule>